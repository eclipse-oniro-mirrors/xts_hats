# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

base_root = "../../../../../../"
import("//build/ohos_var.gni")
import("//test/xts/tools/build/suite.gni")
import("$base_root/drivers/hdf_core/adapter/uhdf2/uhdf.gni")

module_output_path = "hats/wlan"
ohos_moduletest_suite("HatsHdfWifiHdiTest") {
  module_out_path = module_output_path

  configs = [ ":hdf_wlan_hdicommon" ]

  sources = [ "./hal/wifi_hal_test.cpp" ]
  resource_config_file = "$base_root/drivers/hdf_core/adapter/uhdf2/test/resource/wlan/ohos_test.xml"
  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]
  deps = []
  if (is_standard_system) {
    external_deps = [
      "$base_root/drivers/hdf_core/adapter/build/test_common:libhdf_test_common",
      "$base_root/drivers/peripheral/wlan/client:wifi_driver_client",
      "$base_root/drivers/peripheral/wlan/hal:wifi_hal",
      "c_utils:utils",
      "hdf_core:libhdf_utils",
      "hilog:libhilog",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  subsystem_name = "xts"
  part_name = "hats"
}

config("hdf_wlan_hdicommon") {
  include_dirs = [
    "$base_root/drivers/peripheral/wlan/client/include",
    "$base_root/drivers/peripheral/wlan/hal/include",
    "$base_root/drivers/peripheral/wlan/interfaces/include",
  ]
}

module_output_path = "hats/wlan"
ohos_moduletest_suite("HatsHdfWifiHdistartandstopTest") {
  module_out_path = module_output_path
  configs = [ ":hdf_wlan_hdicommonsecond" ]

  sources = [ "./hal/wifi_hal_startandstop.cpp" ]
  resource_config_file = "$base_root/drivers/hdf_core/adapter/uhdf2/test/resource/wlan/ohos_test.xml"
  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]
  deps = []
  if (is_standard_system) {
    external_deps = [
      "$base_root/drivers/hdf_core/adapter/build/test_common:libhdf_test_common",
      "$base_root/drivers/peripheral/wlan/client:wifi_driver_client",
      "$base_root/drivers/peripheral/wlan/hal:wifi_hal",
      "c_utils:utils",
      "hdf_core:libhdf_utils",
      "hilog:libhilog",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  subsystem_name = "xts"
  part_name = "hats"
}

config("hdf_wlan_hdicommonsecond") {
  include_dirs = [
    "$base_root/drivers/peripheral/wlan/client/include",
    "$base_root/drivers/peripheral/wlan/hal/include",
    "$base_root/drivers/peripheral/wlan/interfaces/include",
  ]
}

module_output_path = "hats/wlan"
ohos_moduletest_suite("HatsHdfWificlientTest") {
  module_out_path = module_output_path
  configs = [ ":hdf_wlan_hdicommonthird" ]

  sources = [ "./client/hdf_client_test.cpp" ]
  resource_config_file = "$base_root/drivers/hdf_core/adapter/uhdf2/test/resource/wlan/ohos_test.xml"
  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]
  deps = []
  if (is_standard_system) {
    external_deps = [
      "$base_root/drivers/hdf_core/adapter/build/test_common:libhdf_test_common",
      "$base_root/drivers/peripheral/wlan/client:wifi_driver_client",
      "$base_root/drivers/peripheral/wlan/hal:wifi_hal",
      "c_utils:utils",
      "hdf_core:libhdf_utils",
      "hilog:libhilog",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  subsystem_name = "xts"
  part_name = "hats"
}

config("hdf_wlan_hdicommonthird") {
  include_dirs = [
    "$base_root/drivers/peripheral/wlan/client/include",
    "$base_root/drivers/peripheral/wlan/hal/include",
    "$base_root/drivers/peripheral/wlan/interfaces/include",
  ]
}
module_output_path = "hats/wlan"
ohos_moduletest_suite("HatsHdfWificommonTest") {
  module_out_path = module_output_path

  configs = [ ":hdf_wlan_hdicommonfour" ]
  sources = [
    "./common/hdf_flow_control_test.cpp",
    "./common/hdf_message_test.cpp",
    "./common/hdf_module_test.cpp",
    "./common/hdf_net_buff_test.cpp",
    "./common/hdf_net_device_test.cpp",
  ]
  resource_config_file = "$base_root/drivers/hdf_core/adapter/uhdf2/test/resource/wlan/ohos_test.xml"
  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]
  deps = []
  if (is_standard_system) {
    external_deps = [
      "$base_root/drivers/hdf_core/adapter/build/test_common:libhdf_test_common",
      "$base_root/drivers/peripheral/wlan/client:wifi_driver_client",
      "$base_root/drivers/peripheral/wlan/hal:wifi_hal",
      "c_utils:utils",
      "hdf_core:libhdf_utils",
      "hilog:libhilog",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  subsystem_name = "xts"
  part_name = "hats"
}

config("hdf_wlan_hdicommonfour") {
  include_dirs = [
    "$base_root/drivers/peripheral/wlan/client/include",
    "$base_root/drivers/peripheral/wlan/hal/include",
    "$base_root/drivers/peripheral/wlan/interfaces/include",
  ]
}
