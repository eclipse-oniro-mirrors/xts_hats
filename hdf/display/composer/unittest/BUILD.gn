# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos_var.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")
import("//test/xts/tools/build/suite.gni")

group("HatsHdfDisplayComposerUtTest") {
  testonly = true
  deps = [
    ":HatsHdfDisplayComposerDeathTest",
    ":HatsHdfDisplayComposerDeviceTest",
  ]
}

module_output_path = "hats/display"
base_root = "../../../../../../../"

config("module_private_config") {
  visibility = [ ":*" ]
}

ohos_moduletest_suite("HatsHdfDisplayComposerDeviceTest") {
  module_out_path = module_output_path
  sources = [ "hdi_composer_ut.cpp" ]
  deps = [
    "$base_root/test/xts/hats/hdf/display/composer/common:disp_dev_hdi_test",
    "$base_root/third_party/googletest:gtest_main",
  ]
  include_dirs = [
    "$base_root/drivers/interface/display/composer/hdifd_parcelable",
    "$base_root/drivers/interface/display/composer/bufferhandle_parcelable",
    "$base_root/test/xts/hats/hdf/display/composer/common",
    "$base_root/foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "$base_root/drivers/peripheral/base",
    "utils",
    ".",
    "$base_root/drivers/interface/display/display/v1_0",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_display:display_buffer_idl_headers",
    "drivers_interface_display:display_composer_idl_headers",
    "drivers_interface_display:libdisplay_buffer_hdi_impl",
    "drivers_interface_display:libdisplay_composer_hdi_impl",
    "hdf_core:libhdf_utils",
    "hiviewdfx_hilog_native:libhilog",
  ]
  cflags = [ "-Wno-unused-function" ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_display"
}

ohos_moduletest_suite("HatsHdfDisplayComposerDeathTest") {
  module_out_path = module_output_path
  sources = [ "hdi_death_test.cpp" ]
  deps = [
    "$base_root/test/xts/hats/hdf/display/composer/common:disp_dev_hdi_test",
    "$base_root/third_party/googletest:gtest_main",
  ]
  include_dirs = [
    "$base_root/drivers/interface/display/composer/hdifd_parcelable",
    "$base_root/drivers/interface/display/composer/bufferhandle_parcelable",
    "$base_root/test/xts/hats/hdf/display/composer/common",
    "$base_root/foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "$base_root/drivers/peripheral/display/utils/include",
    "$base_root/drivers/peripheral/base",
    "utils",
    ".",
    "$base_root/drivers/interface/display/display/v1_0",
  ]
  external_deps = [
    "c_utils:utils",
    "drivers_interface_display:display_buffer_idl_headers",
    "drivers_interface_display:display_composer_idl_headers",
    "drivers_interface_display:libdisplay_buffer_hdi_impl",
    "drivers_interface_display:libdisplay_composer_hdi_impl",
    "hdf_core:libhdf_utils",
    "hiviewdfx_hilog_native:libhilog",
  ]
  cflags = [ "-Wno-unused-function" ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_display"
}
